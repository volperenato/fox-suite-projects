; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R3LFO_2@@8					; LFO_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@LFO_2@@8				; LFO_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4LFO_2@@6B@					; LFO_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLFO_2@@@8				; LFO_2 `RTTI Type Descriptor'
PUBLIC	??_R2LFO_2@@8					; LFO_2::`RTTI Base Class Array'
PUBLIC	??_7LFO_2@@6B@					; LFO_2::`vftable'
;	COMDAT ??_7LFO_2@@6B@
CONST	SEGMENT
??_7LFO_2@@6B@ DQ FLAT:??_R4LFO_2@@6B@			; LFO_2::`vftable'
	DQ	FLAT:?init@LFO_2@@UEAAXHMH@Z
	DQ	FLAT:?setSampleRate@LFO_2@@UEAAXH@Z
	DQ	FLAT:?processAudio@LFO_2@@UEAAMXZ
CONST	ENDS
;	COMDAT ??_R2LFO_2@@8
rdata$r	SEGMENT
??_R2LFO_2@@8 DD imagerel ??_R1A@?0A@EA@LFO_2@@8	; LFO_2::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVLFO_2@@@8
data$rs	SEGMENT
??_R0?AVLFO_2@@@8 DQ FLAT:??_7type_info@@6B@		; LFO_2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVLFO_2@@', 00H
data$rs	ENDS
;	COMDAT ??_R4LFO_2@@6B@
rdata$r	SEGMENT
??_R4LFO_2@@6B@ DD 01H					; LFO_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVLFO_2@@@8
	DD	imagerel ??_R3LFO_2@@8
	DD	imagerel ??_R4LFO_2@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@LFO_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LFO_2@@8 DD imagerel ??_R0?AVLFO_2@@@8	; LFO_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3LFO_2@@8
rdata$r	ENDS
;	COMDAT ??_R3LFO_2@@8
rdata$r	SEGMENT
??_R3LFO_2@@8 DD 00H					; LFO_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2LFO_2@@8
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
PUBLIC	??1LFO_2@@QEAA@XZ				; LFO_2::~LFO_2
PUBLIC	?computeIncrement@LFO_2@@AEAAXXZ		; LFO_2::computeIncrement
PUBLIC	?processAudio@LFO_2@@UEAAMXZ			; LFO_2::processAudio
PUBLIC	?setSampleRate@LFO_2@@UEAAXH@Z			; LFO_2::setSampleRate
PUBLIC	?increaseLFOCounter@LFO_2@@QEAAXXZ		; LFO_2::increaseLFOCounter
PUBLIC	?init@LFO_2@@UEAAXHMH@Z				; LFO_2::init
;	COMDAT pdata
pdata	SEGMENT
$pdata$?processAudio@LFO_2@@UEAAMXZ DD imagerel $LN18
	DD	imagerel $LN18+170
	DD	imagerel $unwind$?processAudio@LFO_2@@UEAAMXZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$?processAudio@LFO_2@@UEAAMXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ?init@LFO_2@@UEAAXHMH@Z
_TEXT	SEGMENT
this$ = 8
waveform$ = 16
frequency$ = 24
sampleRate$ = 32
?init@LFO_2@@UEAAXHMH@Z PROC				; LFO_2::init, COMDAT

; 12   : 	computeIncrement();
; 13   : 	lfo_counter = 0.0;

	and	DWORD PTR [rcx+24], 0
	movd	xmm0, r9d

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	cvtdq2ps xmm0, xmm0

; 9    : 	lfo_waveform = waveform;

	mov	DWORD PTR [rcx+20], edx

; 10   : 	lfo_frequency = frequency;
; 11   : 	lfo_sampleRate = sampleRate;

	mov	DWORD PTR [rcx+16], r9d
	movss	DWORD PTR [rcx+8], xmm2

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	divss	xmm2, xmm0
	movss	DWORD PTR [rcx+28], xmm2

; 14   : }

	ret	0
?init@LFO_2@@UEAAXHMH@Z ENDP				; LFO_2::init
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ?increaseLFOCounter@LFO_2@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?increaseLFOCounter@LFO_2@@QEAAXXZ PROC			; LFO_2::increaseLFOCounter, COMDAT

; 39   : 	lfo_counter += lfo_inc;

	movss	xmm0, DWORD PTR [rcx+28]
	addss	xmm0, DWORD PTR [rcx+24]

; 40   : 	if (lfo_counter >= 1)

	comiss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+24], xmm0
	jb	SHORT $LN2@increaseLF

; 41   : 		lfo_counter = 0.0;

	and	DWORD PTR [rcx+24], 0
$LN2@increaseLF:

; 42   : }

	ret	0
?increaseLFOCounter@LFO_2@@QEAAXXZ ENDP			; LFO_2::increaseLFOCounter
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ?setSampleRate@LFO_2@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sampleRate$ = 16
?setSampleRate@LFO_2@@UEAAXH@Z PROC			; LFO_2::setSampleRate, COMDAT

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	movss	xmm1, DWORD PTR [rcx+8]

; 47   : 	computeIncrement();
; 48   : 	lfo_counter = 0.0;

	and	DWORD PTR [rcx+24], 0
	movd	xmm0, edx

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	cvtdq2ps xmm0, xmm0

; 46   : 	lfo_sampleRate = sampleRate;

	mov	DWORD PTR [rcx+16], edx

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	divss	xmm1, xmm0
	movss	DWORD PTR [rcx+28], xmm1

; 49   : }

	ret	0
?setSampleRate@LFO_2@@UEAAXH@Z ENDP			; LFO_2::setSampleRate
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ?processAudio@LFO_2@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?processAudio@LFO_2@@UEAAMXZ PROC			; LFO_2::processAudio, COMDAT

; 52   : {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 53   : 	// Compute LFO value
; 54   : 	float yn;
; 55   : 	switch (lfo_waveform) {

	mov	ecx, DWORD PTR [rcx+20]
	test	ecx, ecx
	je	SHORT $LN4@processAud
	sub	ecx, 1
	je	SHORT $LN5@processAud
	cmp	ecx, 1
	je	SHORT $LN8@processAud

; 74   : 		}
; 75   : 		default: {
; 76   : 			yn = 0.0;

	xorps	xmm2, xmm2
	jmp	SHORT $LN2@processAud
$LN8@processAud:

; 67   : 		}
; 68   : 		case 2: {
; 69   : 			if (lfo_counter <= 0.5)

	movss	xmm0, DWORD PTR [rbx+24]
	comiss	xmm0, DWORD PTR __real@3f000000
	movaps	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@40800000
	jbe	SHORT $LN16@processAud

; 70   : 				yn = 4.0 * lfo_counter - 1.0;
; 71   : 			else
; 72   : 				yn = 3.0 - 4.0 * lfo_counter;

	movss	xmm0, DWORD PTR __real@40400000
	subss	xmm0, xmm2
	movaps	xmm2, xmm0

; 73   : 			break;

	jmp	SHORT $LN2@processAud
$LN5@processAud:

; 59   : 			break;
; 60   : 		}
; 61   : 		case 1: {
; 62   : 			if (lfo_counter == 0)

	movss	xmm0, DWORD PTR [rbx+24]
	xorps	xmm2, xmm2
	ucomiss	xmm0, xmm2
	je	SHORT $LN2@processAud

; 63   : 				yn = 0.0;
; 64   : 			else
; 65   : 				yn = sin(lfo_counter * 2.0 * M_PI);

	addss	xmm0, xmm0
	cvtps2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@400921fb54442d18
	call	QWORD PTR __imp_sin
	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0

; 66   : 			break;

	jmp	SHORT $LN2@processAud
$LN4@processAud:

; 56   : 
; 57   : 		case 0: {
; 58   : 			yn = 2.0 * lfo_counter - 1.0;

	movss	xmm2, DWORD PTR [rbx+24]
	addss	xmm2, xmm2
$LN16@processAud:

; 39   : 	lfo_counter += lfo_inc;

	subss	xmm2, DWORD PTR __real@3f800000
$LN2@processAud:
	movss	xmm1, DWORD PTR [rbx+28]
	addss	xmm1, DWORD PTR [rbx+24]

; 40   : 	if (lfo_counter >= 1)

	comiss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR [rbx+24], xmm1
	jb	SHORT $LN14@processAud

; 41   : 		lfo_counter = 0.0;

	and	DWORD PTR [rbx+24], 0
$LN14@processAud:

; 77   : 			break;
; 78   : 		}
; 79   : 
; 80   : 	}
; 81   : 		
; 82   : 	// Increase lfo counter
; 83   : 	increaseLFOCounter();
; 84   : 
; 85   : 	// Return LFO value
; 86   : 	return yn;

	movaps	xmm0, xmm2

; 87   : 
; 88   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?processAudio@LFO_2@@UEAAMXZ ENDP			; LFO_2::processAudio
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ?computeIncrement@LFO_2@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?computeIncrement@LFO_2@@AEAAXXZ PROC			; LFO_2::computeIncrement, COMDAT

; 91   : {

	movd	xmm0, DWORD PTR [rcx+16]

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	movss	xmm1, DWORD PTR [rcx+8]
	cvtdq2ps xmm0, xmm0
	divss	xmm1, xmm0
	movss	DWORD PTR [rcx+28], xmm1

; 93   : }

	ret	0
?computeIncrement@LFO_2@@AEAAXXZ ENDP			; LFO_2::computeIncrement
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
;	COMDAT ??1LFO_2@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1LFO_2@@QEAA@XZ PROC					; LFO_2::~LFO_2, COMDAT

; 105  : LFO_2::~LFO_2() {}

	lea	rax, OFFSET FLAT:??_7LFO_2@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1LFO_2@@QEAA@XZ ENDP					; LFO_2::~LFO_2
_TEXT	ENDS
END
