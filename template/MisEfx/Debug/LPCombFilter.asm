; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	E:\FoxSuite\misefx\MisEfx\Debug\LPCombFilter.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_GLPFButterworth@@QAEPAXI@Z			; LPFButterworth::`scalar deleting destructor'
PUBLIC	??0LPCombFilter@@QAE@XZ				; LPCombFilter::LPCombFilter
PUBLIC	??1LPCombFilter@@QAE@XZ				; LPCombFilter::~LPCombFilter
PUBLIC	?init@LPCombFilter@@UAEXMH@Z			; LPCombFilter::init
PUBLIC	?setCutoffFrequency@LPCombFilter@@QAEXM@Z	; LPCombFilter::setCutoffFrequency
PUBLIC	?processAudio@LPCombFilter@@UAEMM@Z		; LPCombFilter::processAudio
PUBLIC	??_7LPCombFilter@@6B@				; LPCombFilter::`vftable'
PUBLIC	??_R4LPCombFilter@@6B@				; LPCombFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLPCombFilter@@@8			; LPCombFilter `RTTI Type Descriptor'
PUBLIC	??_R3LPCombFilter@@8				; LPCombFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LPCombFilter@@8				; LPCombFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LPCombFilter@@8			; LPCombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CombFilter@@8			; CombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCombFilter@@@8				; CombFilter `RTTI Type Descriptor'
PUBLIC	??_R3CombFilter@@8				; CombFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CombFilter@@8				; CombFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Delay@@8				; Delay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVDelay@@@8				; Delay `RTTI Type Descriptor'
PUBLIC	??_R3Delay@@8					; Delay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Delay@@8					; Delay::`RTTI Base Class Array'
PUBLIC	__real@469c4000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?init@Delay@@UAEXMH@Z:PROC			; Delay::init
EXTRN	?setSampleRate@Delay@@UAEXH@Z:PROC		; Delay::setSampleRate
EXTRN	?updateIndices@Delay@@QAEXXZ:PROC		; Delay::updateIndices
EXTRN	?writeToDelayLine@Delay@@QAEXM@Z:PROC		; Delay::writeToDelayLine
EXTRN	?readFromDelayLine@Delay@@QAEMXZ:PROC		; Delay::readFromDelayLine
EXTRN	??0CombFilter@@QAE@XZ:PROC			; CombFilter::CombFilter
EXTRN	??1CombFilter@@QAE@XZ:PROC			; CombFilter::~CombFilter
EXTRN	??0LPFButterworth@@QAE@XZ:PROC			; LPFButterworth::LPFButterworth
EXTRN	??1LPFButterworth@@QAE@XZ:PROC			; LPFButterworth::~LPFButterworth
EXTRN	?init@LPFButterworth@@QAEXH@Z:PROC		; LPFButterworth::init
EXTRN	?setCutoffFrequency@LPFButterworth@@QAEXM@Z:PROC ; LPFButterworth::setCutoffFrequency
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@469c4000
CONST	SEGMENT
__real@469c4000 DD 0469c4000r			; 20000
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2Delay@@8
rdata$r	SEGMENT
??_R2Delay@@8 DD FLAT:??_R1A@?0A@EA@Delay@@8		; Delay::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Delay@@8
rdata$r	SEGMENT
??_R3Delay@@8 DD 00H					; Delay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Delay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDelay@@@8
data$rs	SEGMENT
??_R0?AVDelay@@@8 DD FLAT:??_7type_info@@6B@		; Delay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDelay@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@Delay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Delay@@8 DD FLAT:??_R0?AVDelay@@@8	; Delay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Delay@@8
rdata$r	ENDS
;	COMDAT ??_R2CombFilter@@8
rdata$r	SEGMENT
??_R2CombFilter@@8 DD FLAT:??_R1A@?0A@EA@CombFilter@@8	; CombFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Delay@@8
rdata$r	ENDS
;	COMDAT ??_R3CombFilter@@8
rdata$r	SEGMENT
??_R3CombFilter@@8 DD 00H				; CombFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CombFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCombFilter@@@8
data$rs	SEGMENT
??_R0?AVCombFilter@@@8 DD FLAT:??_7type_info@@6B@	; CombFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCombFilter@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CombFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CombFilter@@8 DD FLAT:??_R0?AVCombFilter@@@8 ; CombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CombFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@LPCombFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LPCombFilter@@8 DD FLAT:??_R0?AVLPCombFilter@@@8 ; LPCombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LPCombFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2LPCombFilter@@8
rdata$r	SEGMENT
??_R2LPCombFilter@@8 DD FLAT:??_R1A@?0A@EA@LPCombFilter@@8 ; LPCombFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CombFilter@@8
	DD	FLAT:??_R1A@?0A@EA@Delay@@8
rdata$r	ENDS
;	COMDAT ??_R3LPCombFilter@@8
rdata$r	SEGMENT
??_R3LPCombFilter@@8 DD 00H				; LPCombFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2LPCombFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLPCombFilter@@@8
data$rs	SEGMENT
??_R0?AVLPCombFilter@@@8 DD FLAT:??_7type_info@@6B@	; LPCombFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLPCombFilter@@', 00H
data$rs	ENDS
;	COMDAT ??_R4LPCombFilter@@6B@
rdata$r	SEGMENT
??_R4LPCombFilter@@6B@ DD 00H				; LPCombFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLPCombFilter@@@8
	DD	FLAT:??_R3LPCombFilter@@8
rdata$r	ENDS
;	COMDAT ??_7LPCombFilter@@6B@
CONST	SEGMENT
??_7LPCombFilter@@6B@ DD FLAT:??_R4LPCombFilter@@6B@	; LPCombFilter::`vftable'
	DD	FLAT:?init@LPCombFilter@@UAEXMH@Z
	DD	FLAT:?setSampleRate@Delay@@UAEXH@Z
	DD	FLAT:?processAudio@LPCombFilter@@UAEMM@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0LPCombFilter@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LPCombFilter@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0LPCombFilter@@QAE@XZ$1
__ehfuncinfo$??0LPCombFilter@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0LPCombFilter@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LPCombFilter.cpp
_TEXT	SEGMENT
tv154 = -20						; size = 4
_buff$ = -16						; size = 4
_yn_lpf$ = -12						; size = 4
_yn$ = -8						; size = 4
_this$ = -4						; size = 4
_xn$ = 8						; size = 4
?processAudio@LPCombFilter@@UAEMM@Z PROC		; LPCombFilter::processAudio
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 	// Extract value from delay buffer
; 40   : 	float yn = readFromDelayLine();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?readFromDelayLine@Delay@@QAEMXZ	; Delay::readFromDelayLine
	fstp	DWORD PTR _yn$[ebp]

; 41   : 	
; 42   : 	// process output with LPF
; 43   : 	float yn_lpf = lpcf_feedbackLPF->processAudio(yn);

	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR _yn$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+56]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR _yn_lpf$[ebp]

; 44   : 
; 45   : 	// compute value to be stored in delay buffer
; 46   : 	float buff = xn + cf_feedbackGain * yn_lpf;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+44]
	mulss	xmm0, DWORD PTR _yn_lpf$[ebp]
	addss	xmm0, DWORD PTR _xn$[ebp]
	movss	DWORD PTR _buff$[ebp], xmm0

; 47   : 
; 48   : 	// write the value to delay buffer
; 49   : 	writeToDelayLine(buff);

	push	ecx
	movss	xmm0, DWORD PTR _buff$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeToDelayLine@Delay@@QAEXM@Z	; Delay::writeToDelayLine

; 50   : 
; 51   : 	// aggiorna gli indici
; 52   : 	updateIndices();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateIndices@Delay@@QAEXXZ		; Delay::updateIndices

; 53   : 
; 54   : 	// return output value
; 55   : 	return yn * dly_makeUpGain;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _yn$[ebp]
	mulss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR tv154[ebp], xmm0
	fld	DWORD PTR tv154[ebp]

; 56   : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?processAudio@LPCombFilter@@UAEMM@Z ENDP		; LPCombFilter::processAudio
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LPCombFilter.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cutoffFreq$ = 8					; size = 4
?setCutoffFrequency@LPCombFilter@@QAEXM@Z PROC		; LPCombFilter::setCutoffFrequency
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 	// set LPCF cutoff frequency to the inserted value
; 30   : 	lpcf_cutoffFreq = cutoffFreq;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _cutoffFreq$[ebp]
	movss	DWORD PTR [eax+60], xmm0

; 31   : 
; 32   : 	// set LPF cutoff frequency to the inserted value
; 33   : 	lpcf_feedbackLPF->setCutoffFrequency(lpcf_cutoffFreq);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?setCutoffFrequency@LPFButterworth@@QAEXM@Z ; LPFButterworth::setCutoffFrequency

; 34   : 
; 35   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setCutoffFrequency@LPCombFilter@@QAEXM@Z ENDP		; LPCombFilter::setCutoffFrequency
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LPCombFilter.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_maxDelayInmsec$ = 8					; size = 4
_sampleRate$ = 12					; size = 4
?init@LPCombFilter@@UAEXMH@Z PROC			; LPCombFilter::init
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 	// initialize delay line
; 21   : 	Delay::init(maxDelayInmsec, sampleRate);

	mov	eax, DWORD PTR _sampleRate$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _maxDelayInmsec$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Delay@@UAEXMH@Z			; Delay::init

; 22   : 
; 23   : 	// initialize LPF
; 24   : 	lpcf_feedbackLPF->init(sampleRate);

	mov	ecx, DWORD PTR _sampleRate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?init@LPFButterworth@@QAEXH@Z		; LPFButterworth::init

; 25   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?init@LPCombFilter@@UAEXMH@Z ENDP			; LPCombFilter::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LPCombFilter.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LPCombFilter@@QAE@XZ PROC				; LPCombFilter::~LPCombFilter
; _this$ = ecx

; 14   : LPCombFilter::~LPCombFilter() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LPCombFilter@@6B@

; 15   : 	lpcf_feedbackLPF->~LPFButterworth();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	??_GLPFButterworth@@QAEPAXI@Z

; 16   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CombFilter@@QAE@XZ			; CombFilter::~CombFilter
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1LPCombFilter@@QAE@XZ ENDP				; LPCombFilter::~LPCombFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LPCombFilter.cpp
_TEXT	SEGMENT
tv92 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0LPCombFilter@@QAE@XZ PROC				; LPCombFilter::LPCombFilter
; _this$ = ecx

; 8    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LPCombFilter@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 7    : LPCombFilter::LPCombFilter() : CombFilter()

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CombFilter@@QAE@XZ			; CombFilter::CombFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8    : {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LPCombFilter@@6B@

; 9    : 	lpcf_feedbackLPF = new LPFButterworth();

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@LPCombFilt
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0LPFButterworth@@QAE@XZ		; LPFButterworth::LPFButterworth
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@LPCombFilt
$LN3@LPCombFilt:
	mov	DWORD PTR tv92[ebp], 0
$LN4@LPCombFilt:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+56], eax

; 10   : 	setCutoffFrequency(MAX_CUTOFF_FREQUENCY);

	push	ecx
	movss	xmm0, DWORD PTR __real@469c4000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCutoffFrequency@LPCombFilter@@QAEXM@Z ; LPCombFilter::setCutoffFrequency

; 11   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0LPCombFilter@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CombFilter@@QAE@XZ			; CombFilter::~CombFilter
__unwindfunclet$??0LPCombFilter@@QAE@XZ$1:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0LPCombFilter@@QAE@XZ:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??0LPCombFilter@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LPCombFilter@@QAE@XZ ENDP				; LPCombFilter::LPCombFilter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GLPFButterworth@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLPFButterworth@@QAEPAXI@Z PROC			; LPFButterworth::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LPFButterworth@@QAE@XZ		; LPFButterworth::~LPFButterworth
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	48					; 00000030H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLPFButterworth@@QAEPAXI@Z ENDP			; LPFButterworth::`scalar deleting destructor'
_TEXT	ENDS
END
