; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	E:\FoxSuite\misefx\MisEfx\Debug\LFO_2.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG27172 DB	'invalid argument', 00H
	ORG $+3
$SG27173 DB	'%s', 00H
	ORG $+1
$SG27174 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30133\include\xmemory', 00H
$SG27175 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H
	DB	'1', 00H, '3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG27176 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG27177 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??0LFO_2@@QAE@XZ				; LFO_2::LFO_2
PUBLIC	??1LFO_2@@QAE@XZ				; LFO_2::~LFO_2
PUBLIC	?init@LFO_2@@UAEXHMH@Z				; LFO_2::init
PUBLIC	?setLFOfrequency@LFO_2@@QAEXM@Z			; LFO_2::setLFOfrequency
PUBLIC	?setLFOAmplitude@LFO_2@@QAEXM@Z			; LFO_2::setLFOAmplitude
PUBLIC	?setLFOWaveform@LFO_2@@QAEXH@Z			; LFO_2::setLFOWaveform
PUBLIC	?reset@LFO_2@@QAEXXZ				; LFO_2::reset
PUBLIC	?increaseLFOCounter@LFO_2@@QAEXXZ		; LFO_2::increaseLFOCounter
PUBLIC	?setSampleRate@LFO_2@@UAEXH@Z			; LFO_2::setSampleRate
PUBLIC	?processAudio@LFO_2@@UAEMXZ			; LFO_2::processAudio
PUBLIC	?computeIncrement@LFO_2@@AAEXXZ			; LFO_2::computeIncrement
PUBLIC	??_7LFO_2@@6B@					; LFO_2::`vftable'
PUBLIC	??_R4LFO_2@@6B@					; LFO_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLFO_2@@@8				; LFO_2 `RTTI Type Descriptor'
PUBLIC	??_R3LFO_2@@8					; LFO_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LFO_2@@8					; LFO_2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LFO_2@@8				; LFO_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@4010000000000000
EXTRN	_sin:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@LFO_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LFO_2@@8 DD FLAT:??_R0?AVLFO_2@@@8	; LFO_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LFO_2@@8
rdata$r	ENDS
;	COMDAT ??_R2LFO_2@@8
rdata$r	SEGMENT
??_R2LFO_2@@8 DD FLAT:??_R1A@?0A@EA@LFO_2@@8		; LFO_2::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3LFO_2@@8
rdata$r	SEGMENT
??_R3LFO_2@@8 DD 00H					; LFO_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2LFO_2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLFO_2@@@8
data$rs	SEGMENT
??_R0?AVLFO_2@@@8 DD FLAT:??_7type_info@@6B@		; LFO_2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLFO_2@@', 00H
data$rs	ENDS
;	COMDAT ??_R4LFO_2@@6B@
rdata$r	SEGMENT
??_R4LFO_2@@6B@ DD 00H					; LFO_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLFO_2@@@8
	DD	FLAT:??_R3LFO_2@@8
rdata$r	ENDS
;	COMDAT ??_7LFO_2@@6B@
CONST	SEGMENT
??_7LFO_2@@6B@ DD FLAT:??_R4LFO_2@@6B@			; LFO_2::`vftable'
	DD	FLAT:?init@LFO_2@@UAEXHMH@Z
	DD	FLAT:?setSampleRate@LFO_2@@UAEXH@Z
	DD	FLAT:?processAudio@LFO_2@@UAEMXZ
CONST	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?computeIncrement@LFO_2@@AAEXXZ PROC			; LFO_2::computeIncrement
; _this$ = ecx

; 91   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 	lfo_inc = lfo_frequency / (float)lfo_sampleRate;

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+4]
	divss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+24], xmm1

; 93   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?computeIncrement@LFO_2@@AAEXXZ ENDP			; LFO_2::computeIncrement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
tv65 = -12						; size = 4
_yn$ = -8						; size = 4
_this$ = -4						; size = 4
?processAudio@LFO_2@@UAEMXZ PROC			; LFO_2::processAudio
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 53   : 	// Compute LFO value
; 54   : 	float yn;
; 55   : 	switch (lfo_waveform) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN4@processAud
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN5@processAud
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN8@processAud
	jmp	$LN11@processAud
$LN4@processAud:

; 56   : 
; 57   : 		case 0: {
; 58   : 			yn = 2.0 * lfo_counter - 1.0;

	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+20]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _yn$[ebp], xmm0

; 59   : 			break;

	jmp	$LN2@processAud
$LN5@processAud:

; 60   : 		}
; 61   : 		case 1: {
; 62   : 			if (lfo_counter == 0)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@processAud

; 63   : 				yn = 0.0;

	xorps	xmm0, xmm0
	movss	DWORD PTR _yn$[ebp], xmm0
	jmp	SHORT $LN7@processAud
$LN6@processAud:

; 64   : 			else
; 65   : 				yn = sin(lfo_counter * 2.0 * M_PI);

	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+20]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	mulsd	xmm0, QWORD PTR __real@400921fb54442d18
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	add	esp, 8
	fstp	DWORD PTR _yn$[ebp]
$LN7@processAud:

; 66   : 			break;

	jmp	SHORT $LN2@processAud
$LN8@processAud:

; 67   : 		}
; 68   : 		case 2: {
; 69   : 			if (lfo_counter <= 0.5)

	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+20]
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jb	SHORT $LN9@processAud

; 70   : 				yn = 4.0 * lfo_counter - 1.0;

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+20]
	mulsd	xmm0, QWORD PTR __real@4010000000000000
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _yn$[ebp], xmm0
	jmp	SHORT $LN10@processAud
$LN9@processAud:

; 71   : 			else
; 72   : 				yn = 3.0 - 4.0 * lfo_counter;

	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+20]
	mulsd	xmm0, QWORD PTR __real@4010000000000000
	movsd	xmm1, QWORD PTR __real@4008000000000000
	subsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	movss	DWORD PTR _yn$[ebp], xmm0
$LN10@processAud:

; 73   : 			break;

	jmp	SHORT $LN2@processAud
$LN11@processAud:

; 74   : 		}
; 75   : 		default: {
; 76   : 			yn = 0.0;

	xorps	xmm0, xmm0
	movss	DWORD PTR _yn$[ebp], xmm0
$LN2@processAud:

; 77   : 			break;
; 78   : 		}
; 79   : 
; 80   : 	}
; 81   : 		
; 82   : 	// Increase lfo counter
; 83   : 	increaseLFOCounter();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?increaseLFOCounter@LFO_2@@QAEXXZ	; LFO_2::increaseLFOCounter

; 84   : 
; 85   : 	// Return LFO value
; 86   : 	return yn;

	fld	DWORD PTR _yn$[ebp]

; 87   : 
; 88   : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?processAudio@LFO_2@@UAEMXZ ENDP			; LFO_2::processAudio
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sampleRate$ = 8					; size = 4
?setSampleRate@LFO_2@@UAEXH@Z PROC			; LFO_2::setSampleRate
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 	lfo_sampleRate = sampleRate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sampleRate$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 47   : 	computeIncrement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeIncrement@LFO_2@@AAEXXZ		; LFO_2::computeIncrement

; 48   : 	lfo_counter = 0.0;

	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+20], xmm0

; 49   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSampleRate@LFO_2@@UAEXH@Z ENDP			; LFO_2::setSampleRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?increaseLFOCounter@LFO_2@@QAEXXZ PROC			; LFO_2::increaseLFOCounter
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 	lfo_counter += lfo_inc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	addss	xmm0, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 40   : 	if (lfo_counter >= 1)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN2@increaseLF

; 41   : 		lfo_counter = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+20], xmm0
$LN2@increaseLF:

; 42   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?increaseLFOCounter@LFO_2@@QAEXXZ ENDP			; LFO_2::increaseLFOCounter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?reset@LFO_2@@QAEXXZ PROC				; LFO_2::reset
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	lfo_counter = 0.0;

	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+20], xmm0

; 35   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?reset@LFO_2@@QAEXXZ ENDP				; LFO_2::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_waveform$ = 8						; size = 4
?setLFOWaveform@LFO_2@@QAEXH@Z PROC			; LFO_2::setLFOWaveform
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 	lfo_waveform = waveform;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _waveform$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 30   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?setLFOWaveform@LFO_2@@QAEXH@Z ENDP			; LFO_2::setLFOWaveform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_amplitude$ = 8						; size = 4
?setLFOAmplitude@LFO_2@@QAEXM@Z PROC			; LFO_2::setLFOAmplitude
; _this$ = ecx

; 23   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 24   : 	lfo_amplitude = amplitude;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _amplitude$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 25   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?setLFOAmplitude@LFO_2@@QAEXM@Z ENDP			; LFO_2::setLFOAmplitude
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_frequency$ = 8						; size = 4
?setLFOfrequency@LFO_2@@QAEXM@Z PROC			; LFO_2::setLFOfrequency
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 18   : 	lfo_frequency = frequency;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _frequency$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 19   : 	computeIncrement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeIncrement@LFO_2@@AAEXXZ		; LFO_2::computeIncrement

; 20   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLFOfrequency@LFO_2@@QAEXM@Z ENDP			; LFO_2::setLFOfrequency
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_waveform$ = 8						; size = 4
_frequency$ = 12					; size = 4
_sampleRate$ = 16					; size = 4
?init@LFO_2@@UAEXHMH@Z PROC				; LFO_2::init
; _this$ = ecx

; 8    : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 9    : 	lfo_waveform = waveform;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _waveform$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 10   : 	lfo_frequency = frequency;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _frequency$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 11   : 	lfo_sampleRate = sampleRate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sampleRate$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 12   : 	computeIncrement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeIncrement@LFO_2@@AAEXXZ		; LFO_2::computeIncrement

; 13   : 	lfo_counter = 0.0;

	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+20], xmm0

; 14   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?init@LFO_2@@UAEXHMH@Z ENDP				; LFO_2::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LFO_2@@QAE@XZ PROC					; LFO_2::~LFO_2
; _this$ = ecx

; 105  : LFO_2::~LFO_2() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LFO_2@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1LFO_2@@QAE@XZ ENDP					; LFO_2::~LFO_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\LFO_2.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LFO_2@@QAE@XZ PROC					; LFO_2::LFO_2
; _this$ = ecx

; 96   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LFO_2@@6B@

; 97   : 	lfo_counter = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+20], xmm0

; 98   : 	lfo_sampleRate = 44100;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 44100		; 0000ac44H

; 99   : 	lfo_inc = 0.0;

	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+24], xmm0

; 100  : 	lfo_frequency = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0

; 101  : 	lfo_waveform = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 1

; 102  : 	lfo_amplitude = 1.0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+8], xmm0

; 103  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0LFO_2@@QAE@XZ ENDP					; LFO_2::LFO_2
_TEXT	ENDS
END
