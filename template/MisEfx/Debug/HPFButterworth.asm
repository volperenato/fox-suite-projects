; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	E:\FoxSuite\misefx\MisEfx\Debug\HPFButterworth.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??0HPFButterworth@@QAE@XZ			; HPFButterworth::HPFButterworth
PUBLIC	??1HPFButterworth@@QAE@XZ			; HPFButterworth::~HPFButterworth
PUBLIC	?init@HPFButterworth@@QAEXH@Z			; HPFButterworth::init
PUBLIC	?setSampleRate@HPFButterworth@@QAEXH@Z		; HPFButterworth::setSampleRate
PUBLIC	?setCutoffFrequency@HPFButterworth@@QAEXM@Z	; HPFButterworth::setCutoffFrequency
PUBLIC	?updateGains@HPFButterworth@@QAEXXZ		; HPFButterworth::updateGains
PUBLIC	?updateBuffers@HPFButterworth@@QAEXMM@Z		; HPFButterworth::updateBuffers
PUBLIC	?processAudio@HPFButterworth@@UAEMM@Z		; HPFButterworth::processAudio
PUBLIC	??_7HPFButterworth@@6B@				; HPFButterworth::`vftable'
PUBLIC	??_R4HPFButterworth@@6B@			; HPFButterworth::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVHPFButterworth@@@8			; HPFButterworth `RTTI Type Descriptor'
PUBLIC	??_R3HPFButterworth@@8				; HPFButterworth::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2HPFButterworth@@8				; HPFButterworth::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@HPFButterworth@@8			; HPFButterworth::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@c000000000000000
EXTRN	_sqrt:PROC
EXTRN	_tan:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@HPFButterworth@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@HPFButterworth@@8 DD FLAT:??_R0?AVHPFButterworth@@@8 ; HPFButterworth::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3HPFButterworth@@8
rdata$r	ENDS
;	COMDAT ??_R2HPFButterworth@@8
rdata$r	SEGMENT
??_R2HPFButterworth@@8 DD FLAT:??_R1A@?0A@EA@HPFButterworth@@8 ; HPFButterworth::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3HPFButterworth@@8
rdata$r	SEGMENT
??_R3HPFButterworth@@8 DD 00H				; HPFButterworth::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2HPFButterworth@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVHPFButterworth@@@8
data$rs	SEGMENT
??_R0?AVHPFButterworth@@@8 DD FLAT:??_7type_info@@6B@	; HPFButterworth `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVHPFButterworth@@', 00H
data$rs	ENDS
;	COMDAT ??_R4HPFButterworth@@6B@
rdata$r	SEGMENT
??_R4HPFButterworth@@6B@ DD 00H				; HPFButterworth::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVHPFButterworth@@@8
	DD	FLAT:??_R3HPFButterworth@@8
rdata$r	ENDS
;	COMDAT ??_7HPFButterworth@@6B@
CONST	SEGMENT
??_7HPFButterworth@@6B@ DD FLAT:??_R4HPFButterworth@@6B@ ; HPFButterworth::`vftable'
	DD	FLAT:?processAudio@HPFButterworth@@UAEMM@Z
CONST	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_yn$ = -8						; size = 4
_this$ = -4						; size = 4
_xn$ = 8						; size = 4
?processAudio@HPFButterworth@@UAEMM@Z PROC		; HPFButterworth::processAudio
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 
; 68   : 	// compute filtered output
; 69   : 	float yn = hpf_a0 * xn + hpf_a1 * hpf_xn_1 + hpf_a2 * hpf_xn_2 - hpf_b1 * hpf_yn_1 - hpf_b2 * hpf_yn_2;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR _xn$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+16]
	mulss	xmm1, DWORD PTR [edx+32]
	addss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [eax+20]
	mulss	xmm1, DWORD PTR [ecx+36]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+24]
	mulss	xmm1, DWORD PTR [eax+40]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+28]
	mulss	xmm1, DWORD PTR [edx+44]
	subss	xmm0, xmm1
	movss	DWORD PTR _yn$[ebp], xmm0

; 70   : 
; 71   : 	// update buffers
; 72   : 	updateBuffers(xn, yn);

	push	ecx
	movss	xmm0, DWORD PTR _yn$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _xn$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBuffers@HPFButterworth@@QAEXMM@Z	; HPFButterworth::updateBuffers

; 73   : 
; 74   : 	return yn;

	fld	DWORD PTR _yn$[ebp]

; 75   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?processAudio@HPFButterworth@@UAEMM@Z ENDP		; HPFButterworth::processAudio
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_xn$ = 8						; size = 4
_yn$ = 12						; size = 4
?updateBuffers@HPFButterworth@@QAEXMM@Z PROC		; HPFButterworth::updateBuffers
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	hpf_xn_2 = hpf_xn_1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+36], edx

; 60   : 	hpf_yn_2 = hpf_yn_1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+44], edx

; 61   : 	hpf_xn_1 = xn;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _xn$[ebp]
	movss	DWORD PTR [eax+32], xmm0

; 62   : 	hpf_yn_1 = yn;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _yn$[ebp]
	movss	DWORD PTR [ecx+40], xmm0

; 63   : }

	mov	esp, ebp
	pop	ebp
	ret	8
?updateBuffers@HPFButterworth@@QAEXMM@Z ENDP		; HPFButterworth::updateBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
tv180 = -32						; size = 8
tv186 = -24						; size = 8
tv159 = -16						; size = 8
_C$ = -8						; size = 4
_this$ = -4						; size = 4
?updateGains@HPFButterworth@@QAEXXZ PROC		; HPFButterworth::updateGains
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	// define hpf fb and ff gains
; 49   : 	float C = tan(( M_PI * hpf_cutoffFreq) / (float)hpf_sampleRate );

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+4]
	mulsd	xmm0, QWORD PTR __real@400921fb54442d18
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [ecx+8]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_tan
	add	esp, 8
	fstp	DWORD PTR _C$[ebp]

; 50   : 	hpf_a0 = 1.0 / (1.0 + sqrt(2.0) * C + C * C);

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	QWORD PTR tv159[ebp]
	movsd	xmm0, QWORD PTR tv159[ebp]
	cvtss2sd xmm1, DWORD PTR _C$[ebp]
	mulsd	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	movss	xmm1, DWORD PTR _C$[ebp]
	mulss	xmm1, DWORD PTR _C$[ebp]
	cvtss2sd xmm1, xmm1
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0

; 51   : 	hpf_a1 = -2.0 * hpf_a0;

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+12]
	mulsd	xmm0, QWORD PTR __real@c000000000000000
	cvtsd2ss xmm0, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+16], xmm0

; 52   : 	hpf_a2 = hpf_a0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+20], ecx

; 53   : 	hpf_b1 = 2.0 * hpf_a0 * (C * C - 1.0);

	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+12]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _C$[ebp]
	mulss	xmm1, DWORD PTR _C$[ebp]
	cvtss2sd xmm1, xmm1
	subsd	xmm1, QWORD PTR __real@3ff0000000000000
	mulsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+24], xmm0

; 54   : 	hpf_b2 = hpf_a0 * (1.0 - sqrt(2.0) * C + C * C);

	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+12]
	sub	esp, 8
	movsd	xmm1, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR [esp], xmm1
	movsd	QWORD PTR tv186[ebp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	QWORD PTR tv180[ebp]
	movsd	xmm0, QWORD PTR tv180[ebp]
	cvtss2sd xmm1, DWORD PTR _C$[ebp]
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	movss	xmm0, DWORD PTR _C$[ebp]
	mulss	xmm0, DWORD PTR _C$[ebp]
	cvtss2sd xmm0, xmm0
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv186[ebp]
	mulsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+28], xmm0

; 55   : }

	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?updateGains@HPFButterworth@@QAEXXZ ENDP		; HPFButterworth::updateGains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cutoffFreq$ = 8					; size = 4
?setCutoffFrequency@HPFButterworth@@QAEXM@Z PROC	; HPFButterworth::setCutoffFrequency
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 	// allocate cutoff frequency value
; 40   : 	hpf_cutoffFreq = cutoffFreq;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _cutoffFreq$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 41   : 
; 42   : 	// update hpf gains
; 43   : 	updateGains();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGains@HPFButterworth@@QAEXXZ	; HPFButterworth::updateGains

; 44   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setCutoffFrequency@HPFButterworth@@QAEXM@Z ENDP	; HPFButterworth::setCutoffFrequency
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sampleRate$ = 8					; size = 4
?setSampleRate@HPFButterworth@@QAEXH@Z PROC		; HPFButterworth::setSampleRate
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 	// allocate internal sample rate
; 30   : 	hpf_sampleRate = sampleRate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sampleRate$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 31   : 
; 32   : 	// update hpf gains
; 33   : 	updateGains();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGains@HPFButterworth@@QAEXXZ	; HPFButterworth::updateGains

; 34   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSampleRate@HPFButterworth@@QAEXH@Z ENDP		; HPFButterworth::setSampleRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sampleRate$ = 8					; size = 4
?init@HPFButterworth@@QAEXH@Z PROC			; HPFButterworth::init
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 23   : 	// set internal sample rate
; 24   : 	hpf_sampleRate = sampleRate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sampleRate$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 25   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?init@HPFButterworth@@QAEXH@Z ENDP			; HPFButterworth::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1HPFButterworth@@QAE@XZ PROC				; HPFButterworth::~HPFButterworth
; _this$ = ecx

; 19   : HPFButterworth::~HPFButterworth() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7HPFButterworth@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1HPFButterworth@@QAE@XZ ENDP				; HPFButterworth::~HPFButterworth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File E:\FoxSuite\fox-suite-blocks\src\HPFButterworth.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0HPFButterworth@@QAE@XZ PROC				; HPFButterworth::HPFButterworth
; _this$ = ecx

; 6    : HPFButterworth::HPFButterworth() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7HPFButterworth@@6B@

; 7    : 	hpf_a0 = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0

; 8    : 	hpf_a1 = 0.0;

	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+16], xmm0

; 9    : 	hpf_a2 = 0.0;

	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+20], xmm0

; 10   : 	hpf_b1 = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+24], xmm0

; 11   : 	hpf_b2 = 0.0;

	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+28], xmm0

; 12   : 	hpf_cutoffFreq = 0.0;

	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+4], xmm0

; 13   : 	hpf_xn_1 = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+32], xmm0

; 14   : 	hpf_xn_2 = 0.0;

	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+36], xmm0

; 15   : 	hpf_yn_1 = 0.0;

	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+40], xmm0

; 16   : 	hpf_yn_2 = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+44], xmm0

; 17   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0HPFButterworth@@QAE@XZ ENDP				; HPFButterworth::HPFButterworth
_TEXT	ENDS
END
